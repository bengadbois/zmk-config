/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
	tapping-term-ms = <165>;
};
&lt {
	tapping-term-ms = <165>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        bindings = <
// -----------------------------------------------------------------------------------------------------------------------------------
// |   TAB   |    Q      |    W     |    E     |   L4/R  |    T    |         |    Y    |    U    |    I    |    O    |    P    |    \    |
// |   ESC   |    A      |  ALT/S   |  CMD/D   |   L1/F  |    G    |         |    H    |    J    |  CMD/K  |  ALT/L  |    ;    |   BKSP  |
// |   SHFT  |  CTRL/Z   |    X     |    C     |    V    |    B    |         |    N    |    M    |    ,    |    .    |  CTRL / |   SHFT  |
//                                  |    L2    |   ENT   |    L3   |         |         |   SPC   |         |
   &kp TAB   &kp Q       &kp W      &kp E      &lt 4 R   &kp T               &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
   &kp ESC   &kp A       &mt LALT S &mt LCMD D &lt 1 F   &kp G               &kp H     &kp J    &mt RCMD K &mt RALT L &kp SEMI &kp BSPC
   &kp LSHFT &mt LCTRL Z &kp X      &kp C      &kp V     &kp B               &kp N     &kp M     &kp COMMA &kp DOT &mt RCTRL FSLH &kp RSHFT
                                    &mo 2      &kp RET   &mo 3               &trans    &kp SPACE &trans
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |         |  HOME   |  PG_DN  |  PG_UP  |   END   |         |         |
// |         |         |         |         |         |         |         |  LEFT   |  DOWN   |    UP   |  RIGHT  |         |         |
// |         |         |         |         |         |         |         |         |         |         |         |         |         |
//                               |         |         |         |         |         |         |         |
                        bindings = <
   &trans    &trans    &trans    &trans    &trans    &trans              &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans    &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &trans    &trans    &trans    &trans    &trans    &trans
                                 &trans    &trans    &trans              &trans    &trans    &trans
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |         |    =    |    7    |    8    |    9    |         |         |
// |         |         |         |         |         |         |         |    -    |    4    |    5    |    6    |         |         |
// |         |         |         |         |         |         |         |         |    1    |    2    |    3    |         |         |
//                               |         |         |         |         |         |    0    |         |
                        bindings = <
   &trans    &trans    &trans    &trans    &trans    &trans              &kp EQUAL &kp N7    &kp N8    &kp N9    &trans    &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &kp MINUS &kp N4    &kp N5    &kp N6    &trans    &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &trans    &kp N1    &kp N2    &kp N3    &trans    &trans
                                 &trans    &trans    &trans              &trans    &kp N0    &trans
                        >;
                };
                symbol_layer {
// -----------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |         |    =    |    {    |    }    |         |         |         |
// |         |         |         |         |         |         |         |    -    |    (    |    )    |    `    |    '    |         |
// |         |         |         |         |         |         |         |         |    [    |    ]    |         |         |         |
//                               |         |         |         |         |         |         |         |
                        bindings = <
   &trans    &trans    &trans    &trans    &trans    &trans              &kp EQUAL &kp LBRC  &kp RBRC  &trans    &trans    &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &kp MINUS &kp LPAR  &kp RPAR  &kp GRAVE &kp SQT   &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &trans    &kp LBKT  &kp RBKT  &trans    &trans    &trans
                                 &trans    &trans    &trans              &trans    &trans    &trans
                        >;
                };
                hardware_layer {
// -----------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |         |         | VOL_DOWN|  VOL_UP |         |         |         |
// |         |         |         |         |         |         |         |   PREV  |PLAY/PAUS|  STOP   |   NEXT  |         |         |
// |         |         |         |         |         |         |         |   BTCLR |   BT1   |   BT2   |   BT3   |         |         |
//                               |         |         |         |         |         |         |         |
                        bindings = <
   &trans    &trans    &trans    &trans    &trans    &trans              &trans &kp C_VOL_DN &kp C_VOL_UP &trans &trans    &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &kp C_PREV &kp C_PP &kp C_STOP &kp C_NEXT &trans  &trans
   &trans    &trans    &trans    &trans    &trans    &trans              &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans
                                 &trans    &trans    &trans              &trans    &trans    &trans
                        >;
                };
        };
};
